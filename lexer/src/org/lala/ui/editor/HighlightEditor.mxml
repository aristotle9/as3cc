<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
           xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="canvas1_creationCompleteHandler(event)">
    <fx:Script>
        <![CDATA[
            import mx.controls.textClasses.TextRange;
            import mx.events.FlexEvent;
            import mx.events.ItemClickEvent;
            import mx.events.ScrollEvent;
            import mx.events.ScrollEventDirection;
            
            import org.lala.ui.editor.commands.DeleteLinesCommand;
            import org.lala.ui.editor.commands.IndentCommand;
            import org.lala.ui.editor.commands.OpenCommand;
            import org.lala.ui.editor.commands.SaveCommand;
            import org.lala.ui.editor.commands.UnIndentCommand;
            import org.lala.ui.editor.interfaces.ICommand;
            /** 样式定义 **/
            protected const cssString:String = 
                ".lex_begin,.lex_end,.rule_start,.grammar_begin,.grammar_rule_begin{color:#880000;font-weight:bold;font-size:13px;font-family:Consolas;}" +
                ".dec_initial,.dec_inc,.dec_exc,.dec_package,.dec_class,.dec_import,.dec_field{color:#206ba4;font-weight:bold;font-size:13px;font-family:Consolas;}" +
                ".name{color:#660066;font-weight:normal;font-size:13px;font-family:Consolas;}" +
                ".lb,.rb{color: #666600;font-weight:normal;font-size:13px;font-family:Consolas;}" +//<>
                ".pattern{color:#0068CF;font-weight:normal;font-size:13px;font-family:Consolas;}" +
                ".comment{color: #008800;font-weight:normal;font-size:13px;font-family:Consolas;}" +
                ".action{color:#000088;font-weight:normal;font-size:13px;font-family:Consolas;}" +
                ".code,.lex_code,.grammar_code{color:#006666;font-weight:normal;font-size:13px;font-family:Consolas;}" +
                ".grammar_dec_initial,.grammar_dec_lexer_name,.grammar_dec_prec,.grammar_dec_left,.grammar_dec_right,.grammar_dec_nonassoc,.grammar_dec_start,.grammar_dec_class,.grammar_dec_package,.grammar_dec_import,.grammar_dec_field" +
                "{color:#BF3F00;font-weight:bold;font-size:13px;font-family:Consolas;}" +
                ".grammar_id{color:#0068CF;font-weight:normal;font-size:13px;font-family:Consolas;}" +
                ".grammar_string{color:#B400B4;font-weight:normal;font-size:13px;font-family:Consolas;}" +
                ".grammar_action_body{color:#000088;font-weight:normal;font-size:13px;font-family:Consolas;}" +
                ".plain{color:#000000;font-weight:normal;font-size:13px;font-family:Consolas;}";
            /** 样式数据 **/
            [Bindable] protected var codeStyle:StyleSheet;
            /** 冷却时间 **/
            protected var coldTimer:Timer;
            
            [Bindable]public var text:String;
            [Bindable]public var htmlText:String;
            
            public function exportAsHtml():String
            {
                return '<html>' +
                    '<head>' +
                    '<meta http-equiv="Content-Type" content="text/html; charset=utf-8">' +
                    '<style type="text/css">body{background-color:#ffffe1;}' + 
                    cssString.replace(/Consolas/g,'"$&"') + 
                    '</style></head><body>' + 
                    htmlText.replace(/\r\n?/g, "<br />\r\n") + 
                    '</body></html>';
            }
            
            protected function canvas1_creationCompleteHandler(event:FlexEvent):void
            {
                /** 解析定义文本 **/
                codeStyle = new StyleSheet;
                codeStyle.parseCSS(cssString);
                coldTimer = new Timer(200, 1);
                coldTimer.addEventListener(TimerEvent.TIMER_COMPLETE, colorIt);
            }
            
            protected function needColor():void
            {
                if(!coldTimer.running)
                {
                    coldTimer.start();
                }
                else
                {
                    coldTimer.reset();
                }
            }
            
            protected function colorIt(event:Event=null):void
            {
                var lexInfo:Array = HighlightAssist.getInstance().lexInfo(editor.text);
                var tr:TextRange;
                var lastIndex:uint = 0;
                var result:Array = new Array;
                var oldRange:Array = [0, 0, 0];
                lexInfo.forEach(function(info:Array,...args):void
                {
                    if(oldRange[2] != info[1])
                    {
                        result.push('<span class="plain">' + htmlEscape(text.substring(oldRange[2], info[1])) + '</span>');
                    }
                    if(/[a-z_\-\d\.]+/i.test(String(info[0])))
                        result.push('<span class="' + info[0] + '">' + htmlEscape(text.substring(info[1],info[2])) + '</span>');
                    else
                        result.push('<span class="plain">' + htmlEscape(text.substring(info[1],info[2])) + '</span>');
                    oldRange = info;
                });
                if(lexInfo.length > 0)
                {
                    lastIndex = lexInfo[lexInfo.length - 1][2];
                }
                if(lastIndex <= editor.length - 1)
                {
                    result.push('<span class="plain">' + htmlEscape(text.substring(lastIndex, text.length)) + '</span>');
                }
                htmlText = '';
                htmlText = result.join('');
                viewer.styleSheet = codeStyle;
            }
            
            private function htmlEscape(str:String):String
            {
                return str.replace(/<|>|\&| |\t/g, function(...args):String
                {
                    var obj:Object = {
                        '<' : '&lt;',
                        '>' : '&gt;',
                        '&' : '&amp;',
                        ' ' : '&nbsp;',
                        '\t' : '&nbsp;&nbsp;&nbsp;&nbsp;'
                    }
                    return obj[args[0]];
                });
            }
            protected function editor_keyFocusChangeHandler(event:FocusEvent):void
            {
                var cmd:ICommand; 
                event.preventDefault();
                if(event.shiftKey == false)
                {
                    cmd = new IndentCommand(editor);
                }
                else
                {
                    cmd = new UnIndentCommand(editor);
                }
                cmd.exec();
            }

            protected function editor_keyDownHandler(event:KeyboardEvent):void
            {
            }

            protected function buttonbar1_itemClickHandler(event:ItemClickEvent):void
            {
                var cmd:ICommand = null;
                switch(event.item.label)
                {
                    case "openFile":
                        cmd = new OpenCommand(editor);
                        break;
                    case "saveFile":
                        cmd = new SaveCommand(editor);
                        break;
                    case "delLines":
                        cmd = new DeleteLinesCommand(editor);
                        break;
                }
                if(cmd != null)
                {
                    cmd.exec();
                }
                editor.setFocus();
            }


            protected function editor_scrollHandler(event:ScrollEvent):void
            {
                if(event.direction == ScrollEventDirection.VERTICAL)
                    viewer.verticalScrollPosition = editor.verticalScrollPosition;
                else
                    viewer.horizontalScrollPosition = editor.horizontalScrollPosition;
            }

            protected function viewer_scrollHandler(event:ScrollEvent):void
            {
//                if(event.direction == ScrollEventDirection.VERTICAL)
//                    editor.verticalScrollPosition = viewer.verticalScrollPosition;
//                else
//                    editor.horizontalScrollPosition = viewer.horizontalScrollPosition;
            }

        ]]>
    </fx:Script>
    <mx:VBox width="100%" height="100%" verticalGap="1">
    <mx:ButtonBar height="20" itemClick="buttonbar1_itemClickHandler(event)" toolTipField="tip" labelField="label">
        <mx:dataProvider>
            <fx:Array>
                <fx:Object tip="打开文件" label="openFile"/>
                <fx:Object tip="保存文件" label="saveFile"/>
                <fx:Object tip="删除行" label="delLines"/>
            </fx:Array>
        </mx:dataProvider>
    </mx:ButtonBar>
        <mx:HBox width="100%" height="100%" horizontalGap="0">
            <mx:Canvas width="20" height="100%" backgroundColor="#BBD9EE"/>
            <mx:VDividedBox width="100%" height="100%">
                <mx:TextArea height="100%" id="viewer" htmlText="{this.htmlText}" scroll="viewer_scrollHandler(event)" backgroundColor="#FFFFE1" color="#003344" wordWrap="false" width="100%" focusThickness="0">
                </mx:TextArea>
                <mx:TextArea height="100%" id="editor" change="needColor()" scroll="editor_scrollHandler(event)" text="@{this.text}" backgroundColor="#FFFFE1" fontFamily="Consolas" fontSize="13" color="#003344" wordWrap="false" keyFocusChange="editor_keyFocusChangeHandler(event)" keyDown="editor_keyDownHandler(event)" width="100%" focusThickness="0">
                </mx:TextArea>
            </mx:VDividedBox>
        </mx:HBox>
    </mx:VBox>
</mx:Canvas>
