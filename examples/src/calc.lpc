/** 声明区,包括词法声明,优先级声明,开始符号声明 **/

/** 词法声明开始 **/
%lex
/* 声明区,声明起始状态集 */
%s state1 state2 /* 扩展状态集 */
%x state3 state4 /* 排外状态集 */
%%
/* 词法规则区 **/
/* 正则表达式        动作  **/
0[xX][\da-zA-Z]+    return 'hex';
\d+                 return 'int';
\+                  return '+';
\-                  return '-';
/                   return '/';
/* <起始状态>正则表达式        动作  **/
<state3>\*                   return '*';

/**词法声明结束 **/
/lex
/* 运算符优先级与结合性,处理s/r冲突 */
%left '+' '-'
%left '*' '/'
%left UMINUS
/* 初始非终结符 **/
%start E
%%
/** 语法规则区 **/
E : 
     E '+' E {$$ = $1 + $3;}/*语义动作,支持{嵌套*/
    |E '-' E {$$ = $1 - $3;}
    |E '*' E {$$ = $1 * $3;}
    |E '/' E {$$ = $1 / $3;}
    | '-' E  %prec UMINUS {$$ = - $2;} /* %prec 优先级特别声明 */
    |'(' E ')' {$$ = $2;}
    |int    {$$ = parseInt($1);}
    |hex    {$$ = parseInt($1.substr(2), 16);}
    ;